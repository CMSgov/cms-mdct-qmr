services:
  # wave 1: no dependencies
  database:
    path: services/database
  ui:
    path: services/ui

  # wave 2: depends on database
  uploads:
    path: services/uploads
    params:
      CoreSetTableName: ${database.CoreSetTableName}
      CoreSetTableArn: ${database.CoreSetTableArn}
      MeasureTableName: ${database.MeasureTableName}
      MeasureTableArn: ${database.MeasureTableArn}

  app-api:
    path: services/app-api
    params:
      CoreSetTableName: ${database.CoreSetTableName}
      CoreSetTableArn: ${database.CoreSetTableArn}
      CoreSetTableStreamArn: ${database.CoreSetTableStreamArn}
      MeasureTableName: ${database.MeasureTableName}
      MeasureTableArn: ${database.MeasureTableArn}
      MeasureTableStreamArn: ${database.MeasureTableStreamArn}
      BannerTableName: ${database.BannerTableName}
      BannerTableArn: ${database.BannerTableArn}

  # wave 3: depends on many
  ui-auth:
    path: services/ui-auth
    params:
      AttachmentsBucketArn: ${uploads.AttachmentsBucketArn}
      ApiGatewayRestApiName: ${app-api.ApiGatewayRestApiName}
      ApplicationEndpointUrl: ${ui.ApplicationEndpointUrl}

  # wave 4: depends on many
  ui-src:
    path: services/ui-src
    params:
      ApiRegion: ${app-api.Region}
      ApiGatewayRestApiUrl: ${app-api.ApiGatewayRestApiUrl}
      CognitoRegion: ${ui-auth.Region}
      IdentityPoolId: ${ui-auth.IdentityPoolId}
      UserPoolId: ${ui-auth.UserPoolId}
      UserPoolClientId: ${ui-auth.UserPoolClientId}
      UserPoolClientDomain: ${ui-auth.UserPoolClientDomain}
      AttachmentsBucketRegion: ${uploads.Region}
      AttachmentsBucketName: ${uploads.AttachmentsBucketName}
      DynamoSnapshotBucketRegion: ${uploads.DynamoSnapshotBucketRegion}
      DynamoSnapshotBucketName: ${uploads.DynamoSnapshotBucketName}
      S3BucketName: ${ui.S3BucketName}
      CloudFrontDistributionId: ${ui.CloudFrontDistributionId}
      ApplicationEndpointUrl: ${ui.ApplicationEndpointUrl}
