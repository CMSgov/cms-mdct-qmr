service: kafka-sync

frameworkVersion: "2 || 3"

plugins:
  - serverless-plugin-scripts
  - serverless-s3-local
  - serverless-stack-termination-protection
  - serverless-iam-helper

custom:
  stage: ${opt:stage, self:provider.stage}
  region: ${opt:region, self:provider.region}
  iamPath: ${ssm:/configuration/${self:custom.stage}/iam/path~true, ssm:/configuration/default/iam/path~true}
  iamPermissionsBoundaryPolicy: ${ssm:/configuration/${self:custom.stage}/iam/permissionsBoundaryPolicy~true, ssm:/configuration/default/iam/permissionsBoundaryPolicy~true, ""}
  serverlessTerminationProtection:
    stages:
      - master
      - val
      - production

provider:
  name: aws
  runtime: nodejs14.x
  lambdaHashingVersion: 20201221
  versionFunctions: true
  iam:
    AssumeRolePolicyDocument:
      Version: "2012-10-17"
      Statement:
        - Effect: "Allow"
          Principal:
            Service:
              - "s3.amazonaws.com"
              - "ecs-tasks.amazonaws.com"
          Action: "sts:AssumeRole"
    role:
      path: ${ssm:/configuration/default/iam/path~true, "/"}
      permissionsBoundary: ${ssm:/configuration/default/iam/permissionsBoundaryPolicy~true, ""}
      statements:
        - Effect: "Allow"
          Action:
            - "s3:ListBucket"
          Resource: "arn:aws:s3:::*"
        - Effect: "Allow"
          Action:
            - "s3:PutBucketPublicAccessBlock"
          Resource: "arn:aws:s3:::*"
        - Effect: "Allow"
          Action:
            - "s3:GetBucketLocation"
          Resource: "arn:aws:s3:::*"
        - Effect: "Allow"
          Action:
            - "s3:ListAllMyBuckets"
          Resource: "arn:aws:s3:::*"
      tags:
        Owner: "Foundation"
functions:
  kafkaSync:
    handler: handler.run
    environment:
      accountNumber: !Sub ${AWS::AccountId}
    events:
      - schedule: cron(0 * * * ? *)
    timeout: 60

resources:
  Resources:
    AttachmentsBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: !Sub ${self:service.name}-${self:custom.stage}-kafka-sync-${AWS::AccountId}
    AttachmentsBucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket: !Ref AttachmentsBucket
        PolicyDocument:
          Statement:
            - Action:
                - "s3:GetBucketLocation"
                - "s3:ListBucket"
              Effect: "Allow"
              Resource: !Sub ${AttachmentsBucket.Arn}
              Principal:
                AWS: ${ssm:/configuration/mpraccountid~true}
            - Action:
                - "s3:GetObject"
              Effect: "Allow"
              Resource: !Sub ${AttachmentsBucket.Arn}/*
              Principal:
                AWS: ${ssm:/configuration/mpraccountid~true}
            - Action:
                - "s3:GetObject"
                - "s3:GetBucketLocation"
                - "s3:ListBucket"
                - "s3:PutObject"
              Effect: "Allow"
              Resource: !Sub ${kafkaSync.Arn}/*
              Principal:
                AWS: ${ssm:/configuration/mpraccountid~true}
  Outputs:
    AttachmentsBucketName: # Print out the name of the bucket that is created
      Value: !Ref AttachmentsBucket
    AttachmentsBucketArn:
      Value: !GetAtt AttachmentsBucket.Arn
    Region:
      Value: !Sub ${AWS::Region}
