import { APIGatewayProxyEvent } from "aws-lambda";

export const testBanner = {
  title: "test banner",
  description: "test description",
  link: "https://www.mocklink.com",
  startDate: 1000,
  endDate: 2000,
};

export const proxyEvent: APIGatewayProxyEvent = {
  body: "{}",
  headers: { "x-api-key": "test" },
  httpMethod: "GET",
  isBase64Encoded: false,
  multiValueHeaders: {},
  multiValueQueryStringParameters: {},
  path: "",
  pathParameters: { bannerId: "admin-banner-id" },
  resource: "",
  stageVariables: null,
  queryStringParameters: { bannerId: "testKey" },
  requestContext: {
    accountId: "",
    apiId: "",
    authorizer: () => {},
    httpMethod: "",
    path: "",
    protocol: "",
    requestId: "",
    requestTimeEpoch: 0,
    resourceId: "",
    resourcePath: "",
    stage: "",
    connectedAt: 0,
    connectionId: "",
    domainName: "",
    domainPrefix: "",
    eventType: "",
    extendedRequestId: "",
    messageDirection: "",
    messageId: "",
    requestTime: "",
    routeKey: "",
    identity: {
      accessKey: "",
      accountId: "",
      apiKey: "",
      apiKeyId: "",
      caller: "",
      cognitoAuthenticationProvider: "",
      cognitoAuthenticationType: "",
      cognitoIdentityId: "",
      cognitoIdentityPoolId: "",
      principalOrgId: "",
      sourceIp: "",
      user: "",
      userAgent: "",
      userArn: "",
      clientCert: {
        clientCertPem: "",
        issuerDN: "",
        serialNumber: "",
        subjectDN: "",
        validity: { notAfter: "", notBefore: "" },
      },
    },
  },
};
