service: ui-src

frameworkVersion: "2"

plugins:
  - serverless-plugin-scripts
  - serverless-s3-sync
  - serverless-cloudfront-invalidate
  - serverless-stack-termination-protection
  - serverless-s3-bucket-helper

provider:
  name: aws
  runtime: nodejs12.x
  region: us-east-1

custom:
  stage: ${opt:stage, self:provider.stage}
  region: ${opt:region, self:provider.region}
  serverlessTerminationProtection:
    stages:
      - master
      - val
      - prod
  api_region: ${cf:app-api-${self:custom.stage}.Region}
  api_url: ${cf:app-api-${self:custom.stage}.ApiGatewayRestApiUrl}
  cognito_region: ${cf:ui-auth-${self:custom.stage}.Region}
  cognito_identity_pool_id: ${cf:ui-auth-${self:custom.stage}.IdentityPoolId}
  cognito_user_pool_id: ${cf:ui-auth-${self:custom.stage}.UserPoolId}
  cognito_user_pool_client_id: ${cf:ui-auth-${self:custom.stage}.UserPoolClientId}
  cognito_user_pool_client_domain: ${cf:ui-auth-${self:custom.stage}.UserPoolClientDomain}
  s3_attachments_bucket_region: ${cf:uploads-${self:custom.stage}.Region}
  s3_attachments_bucket_name: ${cf:uploads-${self:custom.stage}.AttachmentsBucketName}
  ui_s3_bucket_name: ${cf:ui-${self:custom.stage}.S3BucketName}
  ui_cloudfront_distribution_id: ${cf:ui-${self:custom.stage}.CloudFrontDistributionId}
  application_endpoint_url: ${cf:ui-${self:custom.stage}.ApplicationEndpointUrl}
  test_user_1: ${ssm:/configuration/testUser1~true, ""}
  test_password_1: ${ssm:/configuration/testPassword1~true, ""}
  prod_url: ${ssm:/configuration/prodUrl~true, ""}
  s3Sync:
    - bucketName: ${self:custom.ui_s3_bucket_name}
      localDir: ./build
      deleteRemoved: true
  cloudfrontInvalidate:
    - distributionId: ${self:custom.ui_cloudfront_distribution_id}
      items:
        - "/*"
  scripts:
    hooks:
      # Build the static archive and populate the config
      package:initialize: |
        set -e
        SKIP_PREFLIGHT_CHECK=true yarn run build
        export API_REGION=${self:custom.api_region}
        export API_URL=${self:custom.api_url}
        export COGNITO_REGION=${self:custom.cognito_region}
        export COGNITO_IDENTITY_POOL_ID=${self:custom.cognito_identity_pool_id}
        export COGNITO_USER_POOL_ID=${self:custom.cognito_user_pool_id}
        export COGNITO_USER_POOL_CLIENT_ID=${self:custom.cognito_user_pool_client_id}
        export COGNITO_USER_POOL_CLIENT_DOMAIN=${self:custom.cognito_user_pool_client_domain}
        export COGNITO_REDIRECT_SIGNIN=${self:custom.application_endpoint_url}
        export COGNITO_REDIRECT_SIGNOUT=${self:custom.application_endpoint_url}
        export S3_ATTACHMENTS_BUCKET_REGION=${self:custom.s3_attachments_bucket_region}
        export S3_ATTACHMENTS_BUCKET_NAME=${self:custom.s3_attachments_bucket_name}
        export LOCAL_LOGIN=false
        export TEST_USER_1=${self:custom.test_user_1}
        export TEST_PASSWORD_1=${self:custom.test_password_1}
        export PROD_URL=${self:custom.prod_url}
        export BRANCH_NAME=${self:custom.stage}
        ./env.sh
        cp public/env-config.js build/env-config.js
resources:
  Outputs:
    TestUserOne:
      Value: !Sub ${ssm:/configuration/testUser1~true, ""}
    TestUserTwo:
      Value: !Sub ${ssm:/configuration/testUser2~true, ""}
    TestUserThree:
      Value: !Sub ${ssm:/configuration/testUser3~true, ""}
    TestPasswordOne:
      Value: !Sub ${ssm:/configuration/testPassword1~true, ""}
    ProdUrl:
      Value: !Sub ${ssm:/configuration/prodUrl~true, ""}