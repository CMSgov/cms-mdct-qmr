name: Pull Request

on:
  pull_request:
    branches:
      - "master"
      - "val"
      - "prod"

permissions:
  id-token: write
  contents: read
  actions: read

jobs:
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: set variable values
        run: ./.github/build_vars.sh set_values
        env:
          CODE_CLIMATE_ID: ${{ secrets.CODE_CLIMATE_ID }}
          CODE_CLIMATE_CMS_ID: ${{ secrets.CODE_CLIMATE_CMS_ID }}
      - name: read .nvmrc
        id: node_version
        run: echo "NODE_VERSION=$(cat .nvmrc)" >> $GITHUB_OUTPUT
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ steps.node_version.outputs.NODE_VERSION }}
      - uses: actions/cache@v2
        with:
          path: |
            **/node_modules
            ~/.cache/Cypress
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock', 'plugins/**') }}
      - name: set path
        run: |
          echo "PATH=$(pwd)/node_modules/.bin/:$PATH" >> $GITHUB_ENV
      # - name: run unit tests
      #   run: ./test-unit.sh
      # - name: publish test coverage to code climate
      #   uses: paambaati/codeclimate-action@v2.7.5
      #   env:
      #     CC_TEST_REPORTER_ID: ${{ secrets.CODE_CLIMATE_ID }}
      #   with:
      #     coverageLocations: |
      #       ${{github.workspace}}/services/app-api/coverage/lcov.info:lcov
      #       ${{github.workspace}}/services/ui-src/coverage/lcov.info:lcov
      # - name: Store unit test reults
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: unit_test_results
      #     path: ${{github.workspace}}/services/ui-src/coverage/lcov.info

  
  e2e-tests-init:
    name: Initialize End To End Tests
    if: ${{ github.ref != 'refs/heads/prod' && github.ref != 'refs/heads/val' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: set branch specific variable names
        run: ./.github/build_vars.sh set_names
      - name: set variable values
        run: ./.github/build_vars.sh set_values
        env:
          AWS_DEFAULT_REGION: ${{ secrets[env.BRANCH_SPECIFIC_VARNAME_AWS_DEFAULT_REGION] || secrets.AWS_DEFAULT_REGION }}
          AWS_OIDC_ROLE_TO_ASSUME: ${{ secrets[env.BRANCH_SPECIFIC_VARNAME_AWS_OIDC_ROLE_TO_ASSUME] || secrets.AWS_OIDC_ROLE_TO_ASSUME }}
          INFRASTRUCTURE_TYPE: ${{ secrets[env.BRANCH_SPECIFIC_VARNAME_INFRASTRUCTURE_TYPE] || secrets.INFRASTRUCTURE_TYPE || 'development' }}
          STAGE_PREFIX: ${{ secrets.STAGE_PREFIX }}
          COGNITO_TEST_USERS_PASSWORD: ${{ secrets[env.BRANCH_SPECIFIC_VARNAME_COGNITO_TEST_USERS_PASSWORD] || secrets.COGNITO_TEST_USERS_PASSWORD }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      - uses: actions/setup-node@v1
        with:
          node-version: "12.x"
      - name: Combine yarn.lock files to single file
        run: find services -maxdepth 3 -name yarn.lock | xargs cat yarn.lock > combined-yarn.txt
      - name: cache service dependencies
        uses: actions/cache@v2
        with:
          path: |
            services/app-api/node_modules
            services/uploads/node_modules
            services/stream-functions/node_modules
            services/ui/node_modules
            services/ui-auth/node_modules
            services/ui-src/node_modules
            node_modules
          key: ${{ runner.os }}-${{ hashFiles('combined-yarn.txt') }}
      - name: Configure AWS credentials for GitHub Actions
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ env.AWS_OIDC_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_DEFAULT_REGION }}
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: set path
        run: |
          echo "PATH=$(pwd)/node_modules/.bin/:$PATH" >> $GITHUB_ENV
      - name: Endpoint
        id: endpoint
        run: |
          pushd services
          export APPLICATION_ENDPOINT=https://d3e781gibwpv2q.cloudfront.net
          echo "APPLICATION_ENDPOINT=$APPLICATION_ENDPOINT" >> $GITHUB_OUTPUT
          echo "APPLICATION_ENDPOINT=$APPLICATION_ENDPOINT" >> $GITHUB_ENV
          echo "Application endpoint: $APPLICATION_ENDPOINT"
          popd
      - id: set-test-matrix
        run: |
          echo "setup-matrix=$(ls -1 tests/cypress/cypress/integration/init/* | xargs -n 1 basename | jq -R -s -c 'split("\n")[:-1]')" | awk '{gsub("\042","\047")}1'>> $GITHUB_OUTPUT
          echo "feature-matrix=$(ls -1 tests/cypress/cypress/integration/features/* | xargs -n 1 basename | jq -R -s -c 'split("\n")[:-1]')" >> $GITHUB_OUTPUT
          echo "child-measure-matrix=$(ls -1 tests/cypress/cypress/integration/measures/child* | xargs -n 1 basename | jq -R -s -c 'split("\n")[:-1]')" >> $GITHUB_OUTPUT
          echo "adult-measure-matrix=$(ls -1 tests/cypress/cypress/integration/measures/adult* | xargs -n 1 basename | jq -R -s -c 'split("\n")[:-1]')" >> $GITHUB_OUTPUT
          echo "home-health-measure-matrix=$(ls -1 tests/cypress/cypress/integration/measures/healthhome* | xargs -n 1 basename | jq -R -s -c 'split("\n")[:-1]')" >> $GITHUB_OUTPUT
          echo "a11y-matrix=$(ls -1 tests/cypress/cypress/integration/a11y/* | xargs -n 1 basename | jq -R -s -c 'split("\n")[:-1]')" >> $GITHUB_OUTPUT
    outputs:
      setup-matrix: ${{ steps.set-test-matrix.outputs.setup-matrix}}
      feature-matrix: ${{ steps.set-test-matrix.outputs.feature-matrix}}
      child-measure-matrix: ${{ steps.set-test-matrix.outputs.child-measure-matrix}}
      adult-measure-matrix: ${{ steps.set-test-matrix.outputs.adult-measure-matrix}}
      home-health-measure-matrix: ${{ steps.set-test-matrix.outputs.home-health-measure-matrix}}
      a11y-matrix: ${{ steps.set-test-matrix.outputs.a11y-matrix}}
      APPLICATION_ENDPOINT: ${{ steps.endpoint.outputs.APPLICATION_ENDPOINT}}
  
  setup-tests:
    name: "Setup End To End Tests" 
    uses: ./.github/workflows/cypress-workflow.yml
    needs: e2e-tests-init
    with:
      test-path: "init"
      test-id: "Setup End To End Tests"
      test-endpoint: "${{ needs.e2e-tests-init.outputs.APPLICATION_ENDPOINT }}"
    secrets:  
      aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
      aws-oidc: ${{ secrets.AWS_OIDC_ROLE_TO_ASSUME }}
      slack-url: ${{ secrets.SLACK_WEBHOOK_URL }}
  
  # child-e2e-measure-tests:
  #   uses: ./.github/workflows/cypress-workflow.yml
  #   needs: e2e-tests-init
  #   with:
  #     test-matrix: ${{ needs.e2e-tests-init.outputs.child-measure-matrix }}
  #     test-path: cypress/integration/measures/child/
  #     test-id: "Child End To End Measure Tests"
  #     test-endpoint: ${{ needs.e2e-tests-init.outputs.APPLICATION_ENDPOINT }}

  # child-e2e-measure-tests:
  #   name: Child End To End Measure Tests
  #   needs: e2e-tests-init
  #   if: ${{ github.ref != 'refs/heads/prod' && github.ref != 'refs/heads/val' }}
  #   runs-on: ubuntu-latest
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       containers: ${{ fromJson(needs.e2e-tests-init.outputs.child-measure-matrix) }}
  #   steps:
  #     - uses: actions/checkout@v1
  #     - name: set branch specific variable names
  #       run: ./.github/build_vars.sh set_names
  #     - name: set variable values
  #       run: ./.github/build_vars.sh set_values
  #       env:
  #         AWS_DEFAULT_REGION: ${{ secrets[env.BRANCH_SPECIFIC_VARNAME_AWS_DEFAULT_REGION] || secrets.AWS_DEFAULT_REGION }}
  #         AWS_OIDC_ROLE_TO_ASSUME: ${{ secrets[env.BRANCH_SPECIFIC_VARNAME_AWS_OIDC_ROLE_TO_ASSUME] || secrets.AWS_OIDC_ROLE_TO_ASSUME }}
  #         INFRASTRUCTURE_TYPE: ${{ secrets[env.BRANCH_SPECIFIC_VARNAME_INFRASTRUCTURE_TYPE] || secrets.INFRASTRUCTURE_TYPE || 'development' }}
  #         STAGE_PREFIX: ${{ secrets.STAGE_PREFIX }}
  #         COGNITO_TEST_USERS_PASSWORD: ${{ secrets[env.BRANCH_SPECIFIC_VARNAME_COGNITO_TEST_USERS_PASSWORD] || secrets.COGNITO_TEST_USERS_PASSWORD }}
  #         SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  #     - uses: actions/setup-node@v1
  #       with:
  #         node-version: "12.x"
  #     - name: Combine yarn.lock files to single file
  #       run: find services -maxdepth 3 -name yarn.lock | xargs cat yarn.lock > combined-yarn.txt
  #     - name: cache service dependencies
  #       uses: actions/cache@v2
  #       with:
  #         path: |
  #           services/app-api/node_modules
  #           services/uploads/node_modules
  #           services/stream-functions/node_modules
  #           services/ui/node_modules
  #           services/ui-auth/node_modules
  #           services/ui-src/node_modules
  #           node_modules
  #         key: ${{ runner.os }}-${{ hashFiles('combined-yarn.txt') }}
  #     - name: Configure AWS credentials for GitHub Actions
  #       uses: aws-actions/configure-aws-credentials@v1
  #       with:
  #         role-to-assume: ${{ env.AWS_OIDC_ROLE_TO_ASSUME }}
  #         aws-region: ${{ env.AWS_DEFAULT_REGION }}
  #     - name: Install dependencies
  #       run: yarn install --frozen-lockfile
  #     - name: set path
  #       run: |
  #         echo "PATH=$(pwd)/node_modules/.bin/:$PATH" >> $GITHUB_ENV
  #     - name: Run Cypress Tests
  #       uses: cypress-io/github-action@v2.11.7
  #       with:
  #         working-directory: tests/cypress
  #         spec: cypress/integration/measures/child/${{ matrix.containers }}
  #         browser: chrome
  #         headless: true
  #         config: baseUrl=${{ needs.e2e-tests-init.outputs.APPLICATION_ENDPOINT }}
  #         wait-on: ${{ needs.e2e-tests-init.outputs.APPLICATION_ENDPOINT }}
  #         env: true
  #       env:
  #         CYPRESS_TEST_USER_1: ${{ secrets.CYPRESS_TEST_USER_1 }}
  #         CYPRESS_TEST_USER_2: ${{ secrets.CYPRESS_TEST_USER_2 }}
  #         CYPRESS_TEST_USER_3: ${{ secrets.CYPRESS_TEST_USER_3 }}
  #         CYPRESS_TEST_USER_4: ${{ secrets.CYPRESS_TEST_USER_4 }}
  #         CYPRESS_TEST_PASSWORD_1: ${{ secrets.CYPRESS_TEST_PASSWORD_1 }}
  #     - name: Upload screenshots
  #       uses: actions/upload-artifact@v2
  #       if: failure()
  #       with:
  #         name: cypress-screenshots
  #         path: |
  #           tests/cypress/screenshots/
  #           tests/cypress/videos/
  #     - name: Slack Notification
  #       if: env.SLACK_WEBHOOK_URL != '' && contains(fromJson('["master", "val", "prod"]'), env.branch_name) && failure ()
  #       uses: 8398a7/action-slack@v3
  #       with:
  #         status: ${{ job.status }}
  #         fields: repo,message,commit,ref # selectable (default: repo,message)
  #       env:
  #         SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  # adult-e2e-measure-tests:
  #   name: Adult End To End Measure Tests
  #   needs: e2e-tests-init
  #   if: ${{ github.ref != 'refs/heads/prod' && github.ref != 'refs/heads/val' }}
  #   runs-on: ubuntu-latest
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       containers: ${{ fromJson(needs.e2e-tests-init.outputs.adult-measure-matrix) }}
  #   steps:
  #     - uses: actions/checkout@v1
  #     - name: set branch specific variable names
  #       run: ./.github/build_vars.sh set_names
  #     - name: set variable values
  #       run: ./.github/build_vars.sh set_values
  #       env:
  #         AWS_DEFAULT_REGION: ${{ secrets[env.BRANCH_SPECIFIC_VARNAME_AWS_DEFAULT_REGION] || secrets.AWS_DEFAULT_REGION }}
  #         AWS_OIDC_ROLE_TO_ASSUME: ${{ secrets[env.BRANCH_SPECIFIC_VARNAME_AWS_OIDC_ROLE_TO_ASSUME] || secrets.AWS_OIDC_ROLE_TO_ASSUME }}
  #         INFRASTRUCTURE_TYPE: ${{ secrets[env.BRANCH_SPECIFIC_VARNAME_INFRASTRUCTURE_TYPE] || secrets.INFRASTRUCTURE_TYPE || 'development' }}
  #         STAGE_PREFIX: ${{ secrets.STAGE_PREFIX }}
  #         COGNITO_TEST_USERS_PASSWORD: ${{ secrets[env.BRANCH_SPECIFIC_VARNAME_COGNITO_TEST_USERS_PASSWORD] || secrets.COGNITO_TEST_USERS_PASSWORD }}
  #         SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  #     - uses: actions/setup-node@v1
  #       with:
  #         node-version: "12.x"
  #     - name: Combine yarn.lock files to single file
  #       run: find services -maxdepth 3 -name yarn.lock | xargs cat yarn.lock > combined-yarn.txt
  #     - name: cache service dependencies
  #       uses: actions/cache@v2
  #       with:
  #         path: |
  #           services/app-api/node_modules
  #           services/uploads/node_modules
  #           services/stream-functions/node_modules
  #           services/ui/node_modules
  #           services/ui-auth/node_modules
  #           services/ui-src/node_modules
  #           node_modules
  #         key: ${{ runner.os }}-${{ hashFiles('combined-yarn.txt') }}
  #     - name: Configure AWS credentials for GitHub Actions
  #       uses: aws-actions/configure-aws-credentials@v1
  #       with:
  #         role-to-assume: ${{ env.AWS_OIDC_ROLE_TO_ASSUME }}
  #         aws-region: ${{ env.AWS_DEFAULT_REGION }}
  #     - name: Install dependencies
  #       run: yarn install --frozen-lockfile
  #     - name: set path
  #       run: |
  #         echo "PATH=$(pwd)/node_modules/.bin/:$PATH" >> $GITHUB_ENV
  #     - name: Run Cypress Tests
  #       uses: cypress-io/github-action@v2.11.7
  #       with:
  #         working-directory: tests/cypress
  #         spec: cypress/integration/measures/adult/${{ matrix.containers }}
  #         browser: chrome
  #         headless: true
  #         config: baseUrl=${{ needs.e2e-tests-init.outputs.APPLICATION_ENDPOINT }}
  #         wait-on: ${{ needs.e2e-tests-init.outputs.APPLICATION_ENDPOINT }}
  #         env: true
  #       env:
  #         CYPRESS_TEST_USER_1: ${{ secrets.CYPRESS_TEST_USER_1 }}
  #         CYPRESS_TEST_USER_2: ${{ secrets.CYPRESS_TEST_USER_2 }}
  #         CYPRESS_TEST_USER_3: ${{ secrets.CYPRESS_TEST_USER_3 }}
  #         CYPRESS_TEST_USER_4: ${{ secrets.CYPRESS_TEST_USER_4 }}
  #         CYPRESS_TEST_PASSWORD_1: ${{ secrets.CYPRESS_TEST_PASSWORD_1 }}
  #     - name: Upload screenshots
  #       uses: actions/upload-artifact@v2
  #       if: failure()
  #       with:
  #         name: cypress-screenshots
  #         path: |
  #           tests/cypress/screenshots/
  #           tests/cypress/videos/
  #     - name: Slack Notification
  #       if: env.SLACK_WEBHOOK_URL != '' && contains(fromJson('["master", "val", "prod"]'), env.branch_name) && failure ()
  #       uses: 8398a7/action-slack@v3
  #       with:
  #         status: ${{ job.status }}
  #         fields: repo,message,commit,ref # selectable (default: repo,message)
  #       env:
  #         SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  # health-home-e2e-measure-tests:
  #   name: Health Home End To End Measure Tests
  #   needs: e2e-tests-init
  #   if: ${{ github.ref != 'refs/heads/prod' && github.ref != 'refs/heads/val' }}
  #   runs-on: ubuntu-latest
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       containers: ${{ fromJson(needs.e2e-tests-init.outputs.home-health-measure-matrix) }}
  #   steps:
  #     - uses: actions/checkout@v1
  #     - name: set branch specific variable names
  #       run: ./.github/build_vars.sh set_names
  #     - name: set variable values
  #       run: ./.github/build_vars.sh set_values
  #       env:
  #         AWS_DEFAULT_REGION: ${{ secrets[env.BRANCH_SPECIFIC_VARNAME_AWS_DEFAULT_REGION] || secrets.AWS_DEFAULT_REGION }}
  #         AWS_OIDC_ROLE_TO_ASSUME: ${{ secrets[env.BRANCH_SPECIFIC_VARNAME_AWS_OIDC_ROLE_TO_ASSUME] || secrets.AWS_OIDC_ROLE_TO_ASSUME }}
  #         INFRASTRUCTURE_TYPE: ${{ secrets[env.BRANCH_SPECIFIC_VARNAME_INFRASTRUCTURE_TYPE] || secrets.INFRASTRUCTURE_TYPE || 'development' }}
  #         STAGE_PREFIX: ${{ secrets.STAGE_PREFIX }}
  #         COGNITO_TEST_USERS_PASSWORD: ${{ secrets[env.BRANCH_SPECIFIC_VARNAME_COGNITO_TEST_USERS_PASSWORD] || secrets.COGNITO_TEST_USERS_PASSWORD }}
  #         SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  #     - uses: actions/setup-node@v1
  #       with:
  #         node-version: "12.x"
  #     - name: Combine yarn.lock files to single file
  #       run: find services -maxdepth 3 -name yarn.lock | xargs cat yarn.lock > combined-yarn.txt
  #     - name: cache service dependencies
  #       uses: actions/cache@v2
  #       with:
  #         path: |
  #           services/app-api/node_modules
  #           services/uploads/node_modules
  #           services/stream-functions/node_modules
  #           services/ui/node_modules
  #           services/ui-auth/node_modules
  #           services/ui-src/node_modules
  #           node_modules
  #         key: ${{ runner.os }}-${{ hashFiles('combined-yarn.txt') }}
  #     - name: Configure AWS credentials for GitHub Actions
  #       uses: aws-actions/configure-aws-credentials@v1
  #       with:
  #         role-to-assume: ${{ env.AWS_OIDC_ROLE_TO_ASSUME }}
  #         aws-region: ${{ env.AWS_DEFAULT_REGION }}
  #     - name: Install dependencies
  #       run: yarn install --frozen-lockfile
  #     - name: set path
  #       run: |
  #         echo "PATH=$(pwd)/node_modules/.bin/:$PATH" >> $GITHUB_ENV
  #     - name: Run Cypress Tests
  #       uses: cypress-io/github-action@v2.11.7
  #       with:
  #         working-directory: tests/cypress
  #         spec: cypress/integration/measures/healthhome/${{ matrix.containers }}
  #         browser: chrome
  #         headless: true
  #         config: baseUrl=${{ needs.e2e-tests-init.outputs.APPLICATION_ENDPOINT }}
  #         wait-on: ${{ needs.e2e-tests-init.outputs.APPLICATION_ENDPOINT }}
  #         env: true
  #       env:
  #         CYPRESS_TEST_USER_1: ${{ secrets.CYPRESS_TEST_USER_1 }}
  #         CYPRESS_TEST_USER_2: ${{ secrets.CYPRESS_TEST_USER_2 }}
  #         CYPRESS_TEST_USER_3: ${{ secrets.CYPRESS_TEST_USER_3 }}
  #         CYPRESS_TEST_USER_4: ${{ secrets.CYPRESS_TEST_USER_4 }}
  #         CYPRESS_TEST_PASSWORD_1: ${{ secrets.CYPRESS_TEST_PASSWORD_1 }}
  #     - name: Upload screenshots
  #       uses: actions/upload-artifact@v2
  #       if: failure()
  #       with:
  #         name: cypress-screenshots
  #         path: |
  #           tests/cypress/screenshots/
  #           tests/cypress/videos/
  #     - name: Slack Notification
  #       if: env.SLACK_WEBHOOK_URL != '' && contains(fromJson('["master", "val", "prod"]'), env.branch_name) && failure ()
  #       uses: 8398a7/action-slack@v3
  #       with:
  #         status: ${{ job.status }}
  #         fields: repo,message,commit,ref # selectable (default: repo,message)
  #       env:
  #         SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  # e2e-feature-tests:
  #   name: End To End Feature Tests
  #   needs: e2e-tests-init
  #   if: ${{ github.ref != 'refs/heads/prod' && github.ref != 'refs/heads/val' }}
  #   runs-on: ubuntu-latest
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       containers: ${{ fromJson(needs.e2e-tests-init.outputs.feature-matrix) }}
  #   steps:
  #     - uses: actions/checkout@v1
  #     - name: set branch specific variable names
  #       run: ./.github/build_vars.sh set_names
  #     - name: set variable values
  #       run: ./.github/build_vars.sh set_values
  #       env:
  #         AWS_DEFAULT_REGION: ${{ secrets[env.BRANCH_SPECIFIC_VARNAME_AWS_DEFAULT_REGION] || secrets.AWS_DEFAULT_REGION }}
  #         AWS_OIDC_ROLE_TO_ASSUME: ${{ secrets[env.BRANCH_SPECIFIC_VARNAME_AWS_OIDC_ROLE_TO_ASSUME] || secrets.AWS_OIDC_ROLE_TO_ASSUME }}
  #         INFRASTRUCTURE_TYPE: ${{ secrets[env.BRANCH_SPECIFIC_VARNAME_INFRASTRUCTURE_TYPE] || secrets.INFRASTRUCTURE_TYPE || 'development' }}
  #         STAGE_PREFIX: ${{ secrets.STAGE_PREFIX }}
  #         COGNITO_TEST_USERS_PASSWORD: ${{ secrets[env.BRANCH_SPECIFIC_VARNAME_COGNITO_TEST_USERS_PASSWORD] || secrets.COGNITO_TEST_USERS_PASSWORD }}
  #         SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  #     - uses: actions/setup-node@v1
  #       with:
  #         node-version: "12.x"
  #     - name: Combine yarn.lock files to single file
  #       run: find services -maxdepth 3 -name yarn.lock | xargs cat yarn.lock > combined-yarn.txt
  #     - name: cache service dependencies
  #       uses: actions/cache@v2
  #       with:
  #         path: |
  #           services/app-api/node_modules
  #           services/uploads/node_modules
  #           services/stream-functions/node_modules
  #           services/ui/node_modules
  #           services/ui-auth/node_modules
  #           services/ui-src/node_modules
  #           node_modules
  #         key: ${{ runner.os }}-${{ hashFiles('combined-yarn.txt') }}
  #     - name: Configure AWS credentials for GitHub Actions
  #       uses: aws-actions/configure-aws-credentials@v1
  #       with:
  #         role-to-assume: ${{ env.AWS_OIDC_ROLE_TO_ASSUME }}
  #         aws-region: ${{ env.AWS_DEFAULT_REGION }}
  #     - name: Install dependencies
  #       run: yarn install --frozen-lockfile
  #     - name: set path
  #       run: |
  #         echo "PATH=$(pwd)/node_modules/.bin/:$PATH" >> $GITHUB_ENV
  #     - name: Run Cypress Tests
  #       uses: cypress-io/github-action@v2.11.7
  #       with:
  #         working-directory: tests/cypress
  #         spec: cypress/integration/features/${{ matrix.containers }}
  #         browser: chrome
  #         headless: true
  #         config: baseUrl=${{ needs.e2e-tests-init.outputs.APPLICATION_ENDPOINT }}
  #         wait-on: ${{ needs.e2e-tests-init.outputs.APPLICATION_ENDPOINT }}
  #         env: true
  #       env:
  #         CYPRESS_TEST_USER_1: ${{ secrets.CYPRESS_TEST_USER_1 }}
  #         CYPRESS_TEST_USER_2: ${{ secrets.CYPRESS_TEST_USER_2 }}
  #         CYPRESS_TEST_USER_3: ${{ secrets.CYPRESS_TEST_USER_3 }}
  #         CYPRESS_TEST_USER_4: ${{ secrets.CYPRESS_TEST_USER_4 }}
  #         CYPRESS_TEST_PASSWORD_1: ${{ secrets.CYPRESS_TEST_PASSWORD_1 }}
  #     - name: Upload screenshots
  #       uses: actions/upload-artifact@v2
  #       if: failure()
  #       with:
  #         name: cypress-screenshots
  #         path: |
  #           tests/cypress/screenshots/
  #           tests/cypress/videos/
  #     - name: Slack Notification
  #       if: env.SLACK_WEBHOOK_URL != '' && contains(fromJson('["master", "val", "prod"]'), env.branch_name) && failure ()
  #       uses: 8398a7/action-slack@v3
  #       with:
  #         status: ${{ job.status }}
  #         fields: repo,message,commit,ref # selectable (default: repo,message)
  #       env:
  #         SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  # a11y-tests:
  #   name: Accessibility Tests
  #   needs: 
  #     - e2e-tests-init
  #     - e2e-feature-tests
  #     - child-e2e-measure-tests
  #     - adult-e2e-measure-tests
  #     - health-home-e2e-measure-tests
  #   if: ${{ github.ref != 'refs/heads/prod' && github.ref != 'refs/heads/val' }}
  #   runs-on: ubuntu-latest
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       containers: ${{ fromJson(needs.e2e-tests-init.outputs.a11y-matrix) }}
  #   steps:
  #     - uses: actions/checkout@v1
  #     - name: set branch specific variable names
  #       run: ./.github/build_vars.sh set_names
  #     - name: set variable values
  #       run: ./.github/build_vars.sh set_values
  #       env:
  #         AWS_DEFAULT_REGION: ${{ secrets[env.BRANCH_SPECIFIC_VARNAME_AWS_DEFAULT_REGION] || secrets.AWS_DEFAULT_REGION }}
  #         AWS_OIDC_ROLE_TO_ASSUME: ${{ secrets[env.BRANCH_SPECIFIC_VARNAME_AWS_OIDC_ROLE_TO_ASSUME] || secrets.AWS_OIDC_ROLE_TO_ASSUME }}
  #         INFRASTRUCTURE_TYPE: ${{ secrets[env.BRANCH_SPECIFIC_VARNAME_INFRASTRUCTURE_TYPE] || secrets.INFRASTRUCTURE_TYPE || 'development' }}
  #         STAGE_PREFIX: ${{ secrets.STAGE_PREFIX }}
  #         COGNITO_TEST_USERS_PASSWORD: ${{ secrets[env.BRANCH_SPECIFIC_VARNAME_COGNITO_TEST_USERS_PASSWORD] || secrets.COGNITO_TEST_USERS_PASSWORD }}
  #         SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  #     - uses: actions/setup-node@v1
  #       with:
  #         node-version: "12.x"
  #     - name: Combine yarn.lock files to single file
  #       run: find services -maxdepth 3 -name yarn.lock | xargs cat yarn.lock > combined-yarn.txt
  #     - name: cache service dependencies
  #       uses: actions/cache@v2
  #       with:
  #         path: |
  #           services/app-api/node_modules
  #           services/uploads/node_modules
  #           services/stream-functions/node_modules
  #           services/ui/node_modules
  #           services/ui-auth/node_modules
  #           services/ui-src/node_modules
  #           node_modules
  #         key: ${{ runner.os }}-${{ hashFiles('combined-yarn.txt') }}
  #     - name: Configure AWS credentials for GitHub Actions
  #       uses: aws-actions/configure-aws-credentials@v1
  #       with:
  #         role-to-assume: ${{ env.AWS_OIDC_ROLE_TO_ASSUME }}
  #         aws-region: ${{ env.AWS_DEFAULT_REGION }}
  #     - name: Install dependencies
  #       run: yarn install --frozen-lockfile
  #     - name: set path
  #       run: |
  #         echo "PATH=$(pwd)/node_modules/.bin/:$PATH" >> $GITHUB_ENV
  #     - name: Run Cypress Tests
  #       uses: cypress-io/github-action@v2.11.7
  #       with:
  #         working-directory: tests/cypress
  #         spec: cypress/integration/a11y/${{ matrix.containers }}
  #         browser: chrome
  #         headless: true
  #         config: baseUrl=${{ needs.e2e-tests-init.outputs.APPLICATION_ENDPOINT }}
  #         wait-on: ${{ needs.e2e-tests-init.outputs.APPLICATION_ENDPOINT }}
  #         env: true
  #       env:
  #         CYPRESS_TEST_USER_1: ${{ secrets.CYPRESS_TEST_USER_1 }}
  #         CYPRESS_TEST_USER_2: ${{ secrets.CYPRESS_TEST_USER_2 }}
  #         CYPRESS_TEST_USER_3: ${{ secrets.CYPRESS_TEST_USER_3 }}
  #         CYPRESS_TEST_USER_4: ${{ secrets.CYPRESS_TEST_USER_4 }}
  #         CYPRESS_TEST_PASSWORD_1: ${{ secrets.CYPRESS_TEST_PASSWORD_1 }}
  #     - name: Upload screenshots
  #       uses: actions/upload-artifact@v2
  #       if: failure()
  #       with:
  #         name: cypress-screenshots
  #         path: |
  #           tests/cypress/screenshots/
  #           tests/cypress/videos/
  #     - name: Slack Notification
  #       if: env.SLACK_WEBHOOK_URL != '' && contains(fromJson('["master", "val", "prod"]'), env.branch_name) && failure ()
  #       uses: 8398a7/action-slack@v3
  #       with:
  #         status: ${{ job.status }}
  #         fields: repo,message,commit,ref # selectable (default: repo,message)
  #       env:
  #         SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
