name: Cypress Tests
on:
  workflow_call:
    inputs:
      test-path:
        description: "Path to the test files"
        required: true
        type: string
      test-endpoint:
        description: "Endpoint to run tests against"
        required: true
        type: string
    secrets:
      slack-url:
        description: "Slack Webhook URL"
        required: true
      cypress-user1:
        description: "Cypress User 1"
        required: true
      cypress-user2:
        description: "Cypress User 2"
        required: true
      cypress-user3:
        description: "Cypress User 3"
        required: true
      cypress-user4:
        description: "Cypress User 4"
        required: true
      cypress-password:
        description: "Cypress Password"
        required: true
      AWS_DEFAULT_REGION:
        description: "DEFAULT REGION"
        required: true
      AWS_OIDC_ROLE_TO_ASSUME:
        description: "AWS OIDC ROLE TO ASSUME"
        required: true

jobs:
  setup:
    name: Setup Cypress Test Matrix
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - id: set-test-matrix
        run: |
          echo "test-matrix=$(ls -1 tests/cypress/cypress/e2e/${{ inputs.test-path }}/* | xargs -n 1 basename | jq -R -s -c 'split("\n")[:-1]')" >> $GITHUB_OUTPUT
      - name: Get Cypress Test Matrix Runner IP
        id: get-test-matrix-ip
        run: |
          #!/bin/bash
          # Get the IP address of the runner
          IP_ADDRESS=$(curl https://api.ipify.org)
          echo "Cypres Test Matrix Runner IP address: $IP_ADDRESS"
    outputs:
      test-matrix: ${{ steps.set-test-matrix.outputs.test-matrix}}
  e2e-tests:
    name: Execute Cypress Tests
    runs-on: ubuntu-latest
    container:
      image: cypress/browsers:node16.16.0-chrome107-ff107
      options: --user root
    needs: setup
    strategy:
      fail-fast: false
      matrix:
        containers: ${{ fromJson(needs.setup.outputs.test-matrix) }}
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: set path
        run: |
          echo "PATH=$(pwd)/node_modules/.bin/:$PATH" >> $GITHUB_ENV
      - name: Verify container details
        run: |
          echo $(uname -a)
      - name: Install container dependencies
        run: |
          apt-get update
          apt-get -y install unzip jq nmap
      - name: check python install
        run: |
          ln -s /usr/bin/python3 /usr/bin/python
          python --version
      - name: Install AWS CLI
        run: |
          curl -o awscli-installer.zip https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip
          unzip awscli-installer.zip
          ./aws/install
      - name: Verify installation
        run: aws --version
      - name: Configure AWS credentials for GitHub Actions
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_OIDC_ROLE_TO_ASSUME }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
      - name: Run Cypress Tests
        uses: cypress-io/github-action@v5
        with:
          working-directory: tests/cypress
          spec: cypress/e2e/${{ inputs.test-path }}/${{ matrix.containers }}
          browser: chrome
          config: baseUrl=${{ inputs.test-endpoint }}
          env: true
        env:
          CYPRESS_TEST_USER_1: ${{ secrets.cypress-user1 }}
          CYPRESS_TEST_USER_2: ${{ secrets.cypress-user2 }}
          CYPRESS_TEST_USER_3: ${{ secrets.cypress-user3 }}
          CYPRESS_TEST_USER_4: ${{ secrets.cypress-user4 }}
          CYPRESS_TEST_PASSWORD_1: ${{ secrets.cypress-password }}
      - name: Upload screenshots
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-screenshots
          path: tests/cypress/screenshots/
